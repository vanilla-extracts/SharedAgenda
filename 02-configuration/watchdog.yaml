- name: "API Watchdog"
  hosts: platform_shag_apis
  become: true
  tasks:
    - name: Create watchdog rule
      ansible.builtin.copy:
        src: 60-watchdog.rules
        dest: /etc/udev/rules.d/60-watchdog.rules
        owner: root
        group: root
        mode: '600'
    - name: Use softdog kernel module
      ansible.builtin.copy: 
        src: watchdog.conf
        dest: /etc/modules-load.d/watchdog.conf
        owner: root
        group: root
        mode: '600'
    - name: Reload systemd modules
      ansible.builtin.systemd_service:
        name: systemd-modules-load
        state: restarted
    - name: Get watchdog information
      ansible.builtin.shell: ls -l /dev/watch*
      register: result
    - name: Print return information from the previous task
      ansible.builtin.debug:
        msg: "{{ result }}"
    - name: Install watchdog package
      apt:
        name: watchdog
        state: latest
    - name: Edit watchdog config file {{ item.name }}
      ansible.builtin.lineinfile:
        path: /etc/watchdog.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - regexp: "^#watchdog-device"
          line: "watchdog-device = /dev/watchdog"
          name: device
        - regexp: "^#watchdog-timeout"
          line: "watchdog-timeout = 15"
          name: timeout
    - name: Reload the Systemd daemon and Enable Watchdog
      become: true
      ansible.builtin.systemd_service:
        name: watchdog
        daemon_reload: true
        enabled: true
    - name: Start the API Systemd Unit
      become: true
      ansible.builtin.systemd_service:
        name: watchdog 
        state: started
