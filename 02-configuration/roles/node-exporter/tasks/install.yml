---
- name: "Create the group {{ _node_exporter_system_group }}"
  ansible.builtin.group:
    name: "{{ _node_exporter_system_group }}"
    state: present
    system: true
  when: _node_exporter_system_group != "root"

- name: "Create the user {{ _node_exporter_system_user }}"
  ansible.builtin.user:
    name: "{{ _node_exporter_system_user }}"
    groups: "{{ _node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false
    home: /
  when: _node_exporter_system_user != "root"

- name: Ensure tar is installed
  ansible.builtin.package:
    name: tar
    state: present

- name: "Ensure directory presence {{ node_exporter_download_dir }}"
  ansible.builtin.file:
    path: "{{ node_exporter_download_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root


- name: "Download on ansible controller node_exporter compressed archive version {{ node_exporter_version }}"
  ansible.builtin.get_url:
    url: "{{ node_exporter_dgfip_download_url }}/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    mode: "0755"
    validate_certs: false
  register: _download_binary
  until: _download_binary is succeeded
  retries: "{{ download_retries }}"
  delay: "{{ download_delay }}"
  become: false
  delegate_to: localhost
  check_mode: false

- name: Copy archive to target machines
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    remote_src: false
    mode: "0755"
    owner: root
    group: root
  when: not ansible_check_mode

- name: Unarchive node_exporter compressed archive
  ansible.builtin.unarchive:
    src: "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "{{ node_exporter_download_dir }}"
    remote_src: true
    mode: "0755"
    owner: root
    group: root

- name: Propagate node_exporter binaries
  become: true
  ansible.builtin.copy:
    src: "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
    dest: "{{ _node_exporter_binary_install_dir }}/node_exporter"
    remote_src: true
    mode: "0755"
    owner: root
    group: root
  notify:
    - Restart node_exporter

- name: Remove temporary files from target machines
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    - "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}"

- name: "Remove node_exporter compressed archive on ansible controller"
  ansible.builtin.file:
    path: "{{ node_exporter_download_dir }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    state: absent
  delegate_to: localhost
  become: false
