---

- name: Purge des alertes si la variable force_purge_rules est d√©finie
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}/rules/"
    state: absent
  when: force_purge_rules | bool
  notify:
    - Reload prometheus

- name: Verifier rep rules
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}/rules"
    state: directory
    owner: root
    group: prometheus
    mode: "0750"

- name: Alerting rules file
  ansible.builtin.template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
    owner: root
    group: prometheus
    mode: "0640"
    validate: "/usr/local/bin/promtool check rules %s"
  when:
    - prometheus_alertmanager_config != []
    - prometheus_alert_rules != []
  notify:
    - Reload prometheus

- name: Copy custom alerting rule files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/rules/"
    owner: root
    group: prometheus
    mode: "0640"
    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  with_fileglob: "{{ prometheus_alert_rules_files }}"
  notify:
    - Reload prometheus

- name: Configure prometheus yml static targets
  # pour grafana, la valeur est une string et non une list
  ansible.builtin.template:
    src: "target.yml.j2"
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: root
    group: prometheus
    mode: "0640"
  with_dict: "{{ prometheus_targets }}"
  when: (prometheus_targets != {}) and
        (prometheus_file_sd_configs_format == 'yaml')

- name: Configure prometheus json static targets
  ansible.builtin.template:
    src: "target.json.j2"
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.json"
    force: true
    owner: root
    group: prometheus
    mode: "0640"
  with_dict: "{{ prometheus_targets }}"
  when: (prometheus_targets != {}) and
        (prometheus_file_sd_configs_format == 'json')

- name: Configure prometheus
  ansible.builtin.template:
    src: "{{ prometheus_config_file }}"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: prometheus
    mode: "0640"
    validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"
  notify:
    - Reload prometheus

- name: Enable basic authentication if acivated
  ansible.builtin.template:
    src: "{{ prometheus_web_config_file }}"
    dest: "{{ prometheus_config_dir }}/prometheus.web.yml"
    force: true
    owner: root
    group: prometheus
    mode: "0640"
  when:
    - prometheus_basic_auth_users_enabled|bool
  notify:
    - Reload prometheus

- name: Copy prometheus custom static targets
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/file_sd/"
    force: true
    owner: root
    group: prometheus
    mode: "0640"
  with_fileglob: "{{ prometheus_static_targets_files }}"
