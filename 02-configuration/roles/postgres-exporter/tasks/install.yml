---

- name: Create group {{ postgres_exporter_system_group }}
  become: true
  ansible.builtin.group:
    name: "{{ postgres_exporter_system_group }}"
    state: "present"
    system: true

- name: Create user {{ postgres_exporter_system_user }}
  become: true
  ansible.builtin.user:
    name: "{{ postgres_exporter_system_user }}"
    groups: "{{ postgres_exporter_system_group }}"
    comment: "postgres_exporter_system_user"
    append: true
    system: true
    shell: /usr/sbin/nologin
    create_home: false
  when:
    - "postgres_exporter_system_user != 'postgres'"
    - "postgres_exporter_system_user != 'root'"

- name: Create directories for postgres exporter
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - "{{ postgres_exporter_bin_dir }}/postgres"
    - /etc/prometheus

- name: Ensure tar is installed
  ansible.builtin.package:
    name: tar
    state: present

- name: "Download postgres_exporter binary on ansible controller with version {{ postgres_exporter_version }}"
  ansible.builtin.get_url:
    url: "{{ dgfip_download_url }}/v{{ postgres_exporter_version }}/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    mode: "0644"
    validate_certs: false
  register: _download_binary
  until: _download_binary is succeeded
  retries: "{{ download_retries }}"
  delay: "{{ download_delay }}"
  run_once: true
  delegate_to: localhost
  become: false

- name: Copy archive to target VMs
  become: true
  ansible.builtin.copy:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    mode: "0755"
    owner: root
    group: root
    remote_src: false
  notify:
    - Restart postgres_exporter

- name: Unarchive  postgres exporter archive
  ansible.builtin.unarchive:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    mode: "0755"
    owner: root
    group: root

- name: "Remove tar on target VMs"
  ansible.builtin.file:
    path: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    state: absent

- name: Propagate postgres_exporter binary
  ansible.builtin.copy:
    src: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/postgres_exporter"
    dest: "{{ postgres_exporter_bin_dir }}/postgres_exporter"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
  notify:
    - Restart postgres_exporter

- name: Remove temporay files on targets
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}"
    - "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"

- name: "Remove postgres exporter archive on ansible controller"
  ansible.builtin.file:
    path: "/tmp/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    state: absent
  run_once: true
  delegate_to: localhost
  become: false

- name: "Ensure postgres_pg_exporter_extend_query_path exists"
  ansible.builtin.copy:
        content: "{{ postgres_pg_exporter_extend_queries }}" 
        dest: "{{ postgres_pg_exporter_extend_query_path }}"
  when: 
    - postgres_pg_exporter_extend_query_path is defined 
    - postgres_pg_exporter_extend_query_path != ""
    
    